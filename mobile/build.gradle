apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix '.dev'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'armeabi-v7a', 'x86'
            universalApk false
        }
    }
}

repositories {
    maven {
        url 'http://developer.skobbler.com/maven/'
    }
    maven {
        url 'https://jitpack.io'
    }
}

configurations {
    skobblersdk
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project (':common')
    wearApp project(':wear')

    // Skobbler
    compile project (':sdktools')
    skobblersdk 'com.skobbler.ngx:SKMaps:2.5.1'

    // Android support libraries
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:21.0.+'

    // Google Play services
    compile 'com.google.android.gms:play-services-wearable:8.4.0'

    // Google map services Java client
    compile 'com.google.maps:google-maps-services:0.1.12'

    // Lombok
    provided 'org.projectlombok:lombok:1.16.6'
    apt 'org.projectlombok:lombok:1.16.6'

    // Guava
    compile 'com.google.guava:guava:19.0'

    // Apache commons lang3
    compile 'org.apache.commons:commons-lang3:3.4'

    // Logger
    compile 'com.github.orhanobut:logger:1.12'

    // JDeferred
    compile 'org.jdeferred:jdeferred-android-aar:1.2.4'

    // Dagger
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.google.dagger:dagger:2.0.2'

    // Butterknife
    compile 'com.jakewharton:butterknife:7.0.1'

    // MPAndroidChart
    compile 'com.github.PhilJay:MPAndroidChart:v2.2.4'
}

// Assign different version code and version name for each output
import com.android.build.OutputFile
ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 3, x86: 6]
ext.versionNames = ['armeabi': 'arm', 'armeabi-v7a': 'armv7a', x86: 'x86']

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 1000000 +
                        android.defaultConfig.versionCode
        output.versionNameOverride =
                android.defaultConfig.versionName + '-' +
                        project.ext.versionNames.get(output.getFilter(OutputFile.ABI))
    }
}

def assetsPath = '$projectDir/src/main/assets'
def libsPath = '$projectDir/libs'
def jniLibsPath = '$projectDir/src/main/jniLibs'

task installSKMaps << {
    copy {
        from configurations.skobblersdk
        into '$buildDir/skobblersdk-down'
        rename { String fileName -> 'skobblersdkres.zip' }
    }
    copy {
        from zipTree('$buildDir/skobblersdk-down/skobblersdkres.zip')
        into '$buildDir/skobblersdk-down'
    }
    delete('$jniLibsPath',
            '$assetsPath/SKMaps.zip',
            '$libsPath/SKMaps.jar')
    copy {
        from '${buildDir}/skobblersdk-down/jniLibs'
        into '$jniLibsPath'
    }
    copy {
        from '${buildDir}/skobblersdk-down/SKMaps.zip'
        into '$assetsPath'
    }
//    copy {
//        from '${buildDir}/skobblersdk-down/SKMaps.jar'
//        into '$libsPath'
//    }
    delete('$buildDir/skobblersdk-down')
    delete(configurations.skobblersdk)
}
