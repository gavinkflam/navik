apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "hk.gavin.navik"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix ".dev"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'armeabi-v7a', 'x86'
            universalApk false
        }
    }
}

repositories {
    maven {
        url "http://developer.skobbler.com/maven/"
    }
    maven {
        url "https://jitpack.io"
    }
}

configurations {
    skobblersdk
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile project (':sdktools')
    skobblersdk "com.skobbler.ngx:SKMaps:2.5.1"

    wearApp project(':wear')
    compile 'com.google.android.gms:play-services-wearable:8.4.0'

    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'

    provided "org.projectlombok:lombok:1.16.6"
    apt "org.projectlombok:lombok:1.16.6"

    compile 'com.google.guava:guava:19.0'

    compile 'com.github.orhanobut:logger:1.12'

    compile 'org.jdeferred:jdeferred-android-aar:1.2.4'

    apt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.google.dagger:dagger:2.0.2'

    compile 'com.jakewharton:butterknife:7.0.1'
}

// Assign different version code and version name for each output
import com.android.build.OutputFile
ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 3, x86: 6]

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 1000000
                    + android.defaultConfig.versionCode
        output.versionNameOverride =
                android.defaultConfig.versionName + '-' + output.getFilter(OutputFile.ABI).toString()
    }
}

def assetsPath = "$projectDir/src/main/assets"
def libsPath = "$projectDir/libs"
def jniLibsPath = "$projectDir/src/main/jniLibs"

task installSKMaps << {
    copy {
        from configurations.skobblersdk
        into "$buildDir/skobblersdk-down"
        rename { String fileName -> 'skobblersdkres.zip' }
    }
    copy {
        from zipTree("$buildDir/skobblersdk-down/skobblersdkres.zip")
        into "$buildDir/skobblersdk-down"
    }
    delete("$jniLibsPath",
            "$assetsPath/SKMaps.zip",
            "$libsPath/SKMaps.jar")
    copy {
        from "${buildDir}/skobblersdk-down/jniLibs"
        into "$jniLibsPath"
    }
    copy {
        from "${buildDir}/skobblersdk-down/SKMaps.zip"
        into "$assetsPath"
    }
//    copy {
//        from "${buildDir}/skobblersdk-down/SKMaps.jar"
//        into "$libsPath"
//    }
    delete("$buildDir/skobblersdk-down")
    delete(configurations.skobblersdk)
}
